# SET HEADERS AND TOKENS

$ContentType = "application/json"

$SourceOrganisation = ""
$SourceProject = ""
$SourcePersonalAccessToken = ""
$SourceToken = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes(":$($SourcePersonalAccessToken)"))
$SourceHeader = $AzureDevOpsAuthenicationHeader = @{Authorization = 'Basic ' + $SourceToken;accept=$ContentType}

$TargetOrganisation = ""
$TargetProject = ""
$TargetPersonalAccessToken = ""
$TargetToken = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes(":$($TargetPersonalAccessToken)"))
$TargetHeader = $AzureDevOpsAuthenicationHeader = @{Authorization = 'Basic ' + $TargetToken;accept=$ContentType}

$SourceField = "Custom.AutomatedID"
$TargetField = "Custom.AutomatedTCID"

# QUERY WORK ITEMS IN SOURCE WITH NOT-EMPTY FIELD

$Uri = "https://dev.azure.com/$SourceOrganisation/$SourceProject/_apis/wit/wiql?api-version=7.1"
$query = "SELECT [System.Id] FROM WorkItems WHERE [System.TeamProject] = '$SourceProject' AND [$SourceField] <> '' ORDER BY [System.ChangedDate] desc"
$body = @{query = $query} | ConvertTo-Json
$SourceWIQ = Invoke-RestMethod -Method POST -Uri $Uri -Headers $SourceHeader -ContentType $ContentType -Body $body

Write-Host "Found " -NoNewline
Write-Host $SourceWIQ.workItems.Count -ForegroundColor Yellow -NoNewline
Write-Host " Work Item(s) with the field " -NoNewline
Write-Host $SourceField -ForegroundColor Yellow

# GET SOURCE FIELD VALUE FOR EVERY WORK ITEM (TEST CASE) AND COPY TO TARGET WORK ITEM

$progress = 0
foreach ($SourceWIQItem in $SourceWIQ.workItems)
{
    # GET SOURCE WORK ITEM FIELD VALUE

    $Uri = "https://dev.azure.com/$SourceOrganisation/$SourceProject/_apis/wit/workitems/$($SourceWIQItem.Id)?api-version=7.1"
    $SourceWorkItem = Invoke-RestMethod -Method GET -Uri $uri -Headers $SourceHeader
    $fieldValue = $SourceWorkItem.fields.$SourceField

    # GET TARGET WORK ITEM

    $Uri = "https://dev.azure.com/$TargetOrganisation/$TargetProject/_apis/wit/wiql?api-version=7.1"
    $SourceWIQItemId = $SourceWIQItem.Id
    $query = "SELECT [System.Id] FROM WorkItems WHERE [System.TeamProject] = '$TargetProject' AND [Custom.ReflectedWorkItemId] = 'https://dev.azure.com/$SourceOrganisation/$SourceProject/_workitems/edit/$SourceWIQItemId' ORDER BY [System.ChangedDate] desc"
    $body = @{query = $query} | ConvertTo-Json
    $TargetWIQ = Invoke-RestMethod -Method POST -Uri $Uri -Headers $TargetHeader -ContentType $ContentType -Body $body

    # CHECK IF THE SOURCE WORK ITEM IS REFERENCED ONLY ONCE

    if ($TargetWIQ.workItems.Count -eq 1) {

        # CHECK IF THE TARGET FIELD IS EMPTY

        $Uri = "https://dev.azure.com/$TargetOrganisation/$TargetProject/_apis/wit/workitems/$($TargetWIQ.workItems[0].id)?api-version=7.1"
        $TargetWorkItem = Invoke-RestMethod -Method GET -Uri $uri -Headers $TargetHeader
        if ([string]::IsNullOrEmpty($TargetWorkItem.fields.$TargetField))
        {

            # UPDATE TARGET WORK ITEM
    
            Write-Host "Copying from Source Item with ID " -NoNewline
            Write-Host $SourceWorkItem.Id -ForegroundColor Yellow -NoNewline
            Write-Host " into Target Work Item with ID " -NoNewline
            Write-Host $TargetWorkItem.Id -ForegroundColor Yellow

            $Uri = "https://dev.azure.com/$TargetOrganisation/$TargetProject/_apis/wit/workitems/$($TargetWorkItem.Id)?api-version=7.1"
            $body = @"
            [
                {
                    "op": "add",
                    "path": "/fields/$TargetField",
                    "value": "$fieldValue"
                }
            ]
"@
            $Patch = Invoke-RestMethod -Method PATCH -Uri $uri -Headers $TargetHeader -ContentType 'application/json-patch+json' -Body $body

            Write-Host "The field was updated with the value: " -NoNewline
            Write-Host $fieldValue -ForegroundColor Yellow

        } else {

            Write-Host "Target work item's field "  -ForegroundColor Red -NoNewline
            Write-Host $TargetField  -ForegroundColor Yellow -NoNewline
            Write-Host " is NOT empty and contains "  -ForegroundColor Red -NoNewline
            Write-Host $TargetWorkItem.fields.$TargetField -ForegroundColor Yellow
            Write-Host "Check: "  -ForegroundColor Red -NoNewline
            Write-Host "https://dev.azure.com/$TargetOrganisation/$TargetProject/_workitems/edit/$($TargetWorkItem.id)" -ForegroundColor Yellow

        }
    } else {

        Write-Host "Found " -ForegroundColor Red -NoNewline
        Write-Host $TargetWIQ.workItems.Count -ForegroundColor Yellow -NoNewline
        Write-Host " item(s) refering to " -ForegroundColor Red -NoNewline
        Write-Host "https://dev.azure.com/$SourceOrganisation/$SourceProject/_workitems/edit/$SourceWIQItemId" -ForegroundColor Yellow

    }
}



<#
# TESTING SINGLE ITEM

$Uri = "https://dev.azure.com/$SourceOrganisation/$SourceProject/_apis/wit/wiql?api-version=7.1"
$query = "SELECT [System.Id] FROM WorkItems WHERE [System.TeamProject] = '$SourceProject' AND [System.Id] = '19602' ORDER BY [System.ChangedDate] desc"
$body = @{query = $query} | ConvertTo-Json
$SourceWIQ = Invoke-RestMethod -Method POST -Uri $Uri -Headers $SourceHeader -ContentType $ContentType -Body $body
Write-Host "Found" + $SourceWIQ.workItems.Count + "Test Cases with" + $SourceField

foreach ($SourceWIQItem in $SourceWIQ.workItems)
{
    # GET SOURCE WORK ITEM FIELD VALUE

    $Uri = "https://dev.azure.com/$SourceOrganisation/$SourceProject/_apis/wit/workitems/$($SourceWIQItem.Id)?api-version=7.1"
    $SourceWorkItem = Invoke-RestMethod -Method GET -Uri $uri -Headers $SourceHeader
    $fieldValue = $SourceWorkItem.fields.$SourceField

    # GET TARGET WORK ITEM

    $Uri = "https://dev.azure.com/$TargetOrganisation/$TargetProject/_apis/wit/wiql?api-version=7.1"
    $SourceWIQItemId = $SourceWIQItem.Id
    $query = "SELECT [System.Id] FROM WorkItems WHERE [System.TeamProject] = '$TargetProject' AND [Custom.ReflectedWorkItemId] = 'https://dev.azure.com/$SourceOrganisation/$SourceProject/_workitems/edit/$SourceWIQItemId' ORDER BY [System.ChangedDate] desc"
    $body = @{query = $query} | ConvertTo-Json
    $TargetWIQ = Invoke-RestMethod -Method POST -Uri $Uri -Headers $TargetHeader -ContentType $ContentType -Body $body

    # CHECK IF THE SOURCE WORK ITEM IS REFERENCED ONLY ONCE

    if ($TargetWIQ.workItems.Count -eq 1) {

        # CHECK IF THE TARGET FIELD IS EMPTY

        $Uri = "https://dev.azure.com/$TargetOrganisation/$TargetProject/_apis/wit/workitems/$($TargetWIQ.workItems[0].id)?api-version=7.1"
        $TargetWorkItem = Invoke-RestMethod -Method GET -Uri $uri -Headers $TargetHeader
        if ([string]::IsNullOrEmpty($TargetWorkItem.fields.$TargetField))
        {

            # UPDATE TARGET WORK ITEM
    
            Write-Host "Copying from Source Item with ID " -NoNewline
            Write-Host $SourceWorkItem.Id -ForegroundColor Yellow -NoNewline
            Write-Host " into Target Work Item with ID " -NoNewline
            Write-Host $TargetWorkItem.Id -ForegroundColor Yellow

            $Uri = "https://dev.azure.com/$TargetOrganisation/$TargetProject/_apis/wit/workitems/$($TargetWorkItem.Id)?api-version=7.1"
            $body = @"
            [
                {
                    "op": "add",
                    "path": "/fields/$TargetField",
                    "value": "$fieldValue"
                }
            ]
"@
            $Patch = Invoke-RestMethod -Method PATCH -Uri $uri -Headers $TargetHeader -ContentType 'application/json-patch+json' -Body $body

            Write-Host "The field was updated with the value: " -NoNewline
            Write-Host $fieldValue -ForegroundColor Yellow

        } else {

            Write-Host "Target work item's field "  -ForegroundColor Red -NoNewline
            Write-Host $TargetField  -ForegroundColor Yellow -NoNewline
            Write-Host " is NOT empty and contains "  -ForegroundColor Red -NoNewline
            Write-Host $TargetWorkItem.fields.$TargetField -ForegroundColor Yellow
            Write-Host "Check: "  -ForegroundColor Red -NoNewline
            Write-Host "https://dev.azure.com/$TargetOrganisation/$TargetProject/_workitems/edit/$($TargetWorkItem.id)" -ForegroundColor Yellow

        }
    } else {
        Write-Host "Found" + $TargetWIQ.workItems.Count + "item(s) refering to" + $SourceWorkItem.Id
    }
}
#>






    #$progress = $progress + 1
    #if ($progress -match '^\d+[0,5]$' ) { Write-Host $progress "/" $count }
